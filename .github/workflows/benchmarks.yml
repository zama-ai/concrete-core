# Run benchmarks on an AWS instance and return parsed results to Slab CI bot.
name: Performance benchmarks

on:
  workflow_dispatch:
  # Have a weekly benchmark run on main branch to be available on Monday morning (Paris time)
  schedule:
    # * is a special character in YAML so you have to quote this string
    # At 1:00 every Monday
    # Timezone is UTC, so Paris time is +2 during the summer and +1 during winter
    - cron: '0 1 * * MON'

env:
  CARGO_TERM_COLOR: always
  ACTION_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  RESULTS_FILENAME: parsed_benchmark_results_${{ github.sha }}.json

jobs:
  start-runner:
    name: Start EC2 runner
    runs-on: ubuntu-20.04
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_IAM_ID }}
          aws-secret-access-key: ${{ secrets.AWS_IAM_KEY }}
          aws-region: eu-west-3
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.CONCRETE_ACTIONS_TOKEN }}
          ec2-image-id: ami-0dae0bbbc42a4664a
          ec2-instance-type: m6i.metal  # Bare metal instance but very costly.
          subnet-id: subnet-da319dd4
          security-group-id: sg-064a7184f24469c76

  run-benchmarks:
    name: Execute benchmarks in EC2
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: EC2 instance configuration used
        run: |
            echo "IDs: ${{ github.event.inputs.instance_id }}"
            echo "AMI: ${{ github.event.inputs.instance_image_id }}"
            echo "Type: ${{ github.event.inputs.instance_type }}"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: actions/checkout@v3
      - name: Run concrete benchmarks
        run: cargo run concrete-core-bench

      - name: Parse results
        run: |
          python3 ./ci/benchmark_parser.py "./${RESULTS_FILENAME}" \
          --series-tags '{"commit_hash": "${{ github.sha }}", "backend": "cpu"}'
        shell: bash

      - name: Upload results artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: ${RESULTS_FILENAME}

      - uses: actions/checkout@v3
      - name: Send data to Slab
        shell: bash
        run: |
          echo "Computing HMac on downloaded artifact"
          SIGNATURE="$(./ci/hmac_calculator.sh ./${RESULTS_FILENAME} '${{ secrets.JOB_SECRET }}')"
          echo "Sending results to Slab..."
          curl -v -k \
          -H "Content-Type: application/json" \
          -H "X-Slab-Repository: ${{ github.repository }}" \
          -H "X-Slab-Command: plot_data" \
          -H "X-Hub-Signature-256: sha256=${SIGNATURE}" \
          -d @${RESULTS_FILENAME} \
          ${{ secrets.SLAB_URL }}

      - name: Slack Notification
        if: ${{ always() }}
        continue-on-error: true
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_ICON: https://pbs.twimg.com/profile_images/1274014582265298945/OjBKP9kn_400x400.png
          SLACK_MESSAGE: "(Slab ci-bot) AWS benchmarks CPU finished with status ${{ job.status }}. (${{ env.ACTION_RUN_URL }})"
          SLACK_USERNAME: ${{ secrets.BOT_USERNAME }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  stop-runner:
    name: Stop EC2 runner
    needs:
      - start-runner
      - run-benchmarks
    runs-on: ubuntu-20.04
    if: ${{ always() && (needs.start-runner.result != 'skipped') }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_IAM_ID }}
          aws-secret-access-key: ${{ secrets.AWS_IAM_KEY }}
          aws-region: eu-west-3
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          github-token: ${{ secrets.CONCRETE_ACTIONS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
          mode: stop
