[package]
name = "concrete-core-ffi"
version = "0.1.0"
edition = "2021"
authors = ["Zama team"]
license = "BSD-3-Clause-Clear"
description = "Foreign Function Interface for the Concrete core library"
homepage = "https://www.zama.ai/concrete-framework"
documentation = "https://docs.zama.ai/concrete/core-lib/"
repository = "https://github.com/zama-ai/concrete-core"
readme = "README.md"
keywords = ["fully", "homomorphic", "encryption", "fhe", "cryptography"]
build = "build.rs"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
concrete-commons = { path = "../concrete-commons" }
concrete-core = { path = "../concrete-core" }
bincode = "1.3"

[features]
default = []
# Enable all features for documenting
# This will need to be handled differently once more CPUs are supported (like M1 e.g.)
doc = [
    "backend_default",
    "backend_default_generator_x86_64_aesni",
    "backend_default_parallel",
    "backend_fftw",
    "seeder_unix",
    "seeder_x86_64_rdseed",
    "serde_serialize",
]

# A pure-rust backend
backend_default = ["concrete-core/backend_default"]

# Enable x86_64 specific aes accelerated CSPRNG
backend_default_generator_x86_64_aesni = [
    "concrete-core/backend_default_generator_x86_64_aesni",
]

# An accelerated backend, using the `fftw` library
backend_fftw = ["concrete-core/backend_fftw"]

# Multithreaded key generation
backend_default_parallel = ["concrete-core/backend_default_parallel"]

# Unix specific seeder
seeder_unix = ["concrete-core/seeder_unix"]

# x86_64 specific seeder using rdseed hardware feature
seeder_x86_64_rdseed = ["concrete-core/seeder_x86_64_rdseed"]

# Necessary for key serialization
serde_serialize = ["concrete-core/serde_serialize"]

[build-dependencies]
cbindgen = "0.23"

[lib]
name = "concrete_core_ffi"
crate-type = ["staticlib", "cdylib"]
