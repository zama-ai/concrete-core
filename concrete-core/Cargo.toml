[package]
name = "concrete-core"
version = "1.0.0-delta"
edition = "2021"
authors = ["D. Ligier", "J.B. Orfila", "A. Péré", "S. Tap", "Zama team"]
license = "BSD-3-Clause-Clear"
description = "Concrete is a fully homomorphic encryption (FHE) library that implements Zama's variant of TFHE."
homepage = "https://www.zama.ai/concrete-framework"
documentation = "https://docs.zama.ai/concrete/lib"
repository = "https://github.com/zama-ai/concrete-core"
readme = "README.md"
keywords = ["fully", "homomorphic", "encryption", "fhe", "cryptography"]

[dev-dependencies]
concrete-npe = { version = "0.3.0", path = "../concrete-npe" }
rand = "0.7"
kolmogorov_smirnov = "1.1.0"

[dependencies]
concrete-fftw = { version = "=0.1.3", optional = true }
concrete-commons = { version = "=0.2.2", path = "../concrete-commons" }
concrete-csprng = { version = "0.2", path = "../concrete-csprng", features = [
] }
concrete-cuda = { version = "0.1.0", path = "../concrete-cuda", optional = true }
serde = { version = "1.0", optional = true }
lazy_static = "1.4.0"
rayon = { version = "1.5.0", optional = true }
bincode = { version = "1.3.3", optional = true }

[lib]
name = "concrete_core"
bench = false

[features]
default = ["backend_default", "seeder_unix"]
doc = []

# A pure-rust backend. Included by default in the build.
backend_default = ["concrete-csprng/generator_soft"]

# Enables the parallel engine in default backend.
backend_default_parallel = ["__commons_parallel"]

# Enable the x86_64 specific accelerated implementation of the random generator for the default
# backend
backend_default_generator_x86_64_aesni = [
    "concrete-csprng/generator_x86_64_aesni",
]

# Enable the serialization engine in the default backend.
backend_default_serialization = ["bincode", "__commons_serialization"]

# An accelerated backend, using the `fftw` library.
backend_fftw = ["concrete-fftw"]

# Enable the serialization engine in the fftw backend.
backend_fftw_serialization = [
    "bincode",
    "concrete-fftw/serialize",
    "__commons_serialization",
]

# A GPU backend, relying on Cuda acceleration
backend_cuda = ["concrete-cuda"]

# Private features
__commons_parallel = ["rayon", "concrete-csprng/parallel"]
__commons_serialization = [
    "serde",
    "serde/derive",
    "concrete-commons/serde_serialize",
]
_ci_do_not_compile = ["concrete-cuda/_ci_do_not_compile"]

seeder_unix = ["concrete-csprng/seeder_unix"]
seeder_x86_64_rdseed = ["concrete-csprng/seeder_x86_64_rdseed"]

[package.metadata.docs.rs]
features = ["doc"]
rustdoc-args = ["--html-in-header", "katex-header.html"]
